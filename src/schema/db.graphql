enum Gender {
    MALE
    FEMALE
}

scalar Date

type Salary {
    salary: Int!
    from: Date
    to: Date
    employee: Employee!
}

type Employee {
    id: ID!
    firstName: String
    lastName: String
    gender: Gender
    birthDate: Date
    hireDate: Date!
    salaries: [Salary!]!
}

input EmployeeWhereInput {
    AND: [EmployeeWhereInput!]
    OR: [EmployeeWhereInput!]

    id: ID
    firstName: String
    lastName: String
    gender: Gender
    birthDate: Date
    hireDate: Date
}

input EmployeeOrderByInput {
    id: Boolean
    id_DESC: Boolean

    firstName: Boolean
    firstName_DESC: Boolean
}

type Query {
    employee(
        where: EmployeeWhereInput
        orderBy: EmployeeOrderByInput
        skip: Int
        limit: Int
    ): Employee!
}
