enum Gender {
    MALE
    FEMALE
}

scalar Date

input FilterIdInput {
    eq: ID
    in: [ID!]
}

input FilterIntInput {
    eq: Int
    in: [Int!]
    null: Boolean
    not_null: Boolean
}

input FilterStringInput {
    eq: String
    like: String
}

type Employee {
    id: ID!
    firstName: String
    lastName: String
    gender: Gender
    birthDate: Date
    hireDate: Date!
    title: String
    salary: Float
}

type Manager {
    id: ID!
    firstName: String
    lastName: String
    gender: Gender
    birthDate: Date
    hireDate: Date!
    from: Date
    to: Date
    title: String
    salary: Float
}

input DepartmentWhereInput {
    id: FilterIdInput
}

type Department {
    id: ID!
    name: String
    manager: Manager
    employees: [Employee!]
}

type Query {
    departments(
        where: DepartmentWhereInput
    ): [Department!]!
}
